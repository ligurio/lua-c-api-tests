--[[
SPDX-License-Identifier: ISC
Copyright (c) 2023-2025, Sergey Bronnikov.

Bad lookup generated by lj_record_idx in GC64,
https://github.com/LuaJIT/LuaJIT/issues/840

Synopsis:
  LuaJIT: table.new(narray, nhash)
  PUC Rio Lua: table.create(narray, nhash)
]]

local luzer = require("luzer")
local test_lib = require("lib")

local table_create
if test_lib.lua_version() == "LuaJIT" then
    table_create = require("table.new")
elseif test_lib.lua_current_version_ge_than(5, 5) then
    -- New function 'table.create()' in PUC Rio Lua,
    -- https://github.com/lua/lua/commit/3e9dbe143d3338f5f13a5e421ea593adff482da0
    table_create = table.create
else
    print("Unsupported version.")
    os.exit(0)
end

local function TestOneInput(buf)
    local fdp = luzer.FuzzedDataProvider(buf)
    -- Beware, huge number triggers OOM or table overflow.
    local MAX_N = 1000
    local narray = fdp:consume_integer(0, MAX_N)
    local nhash = fdp:consume_integer(0, MAX_N)
    local _ = table_create(narray, nhash) -- luacheck: no unused
end

local args = {
    artifact_prefix = "table_create_",
}
luzer.Fuzz(TestOneInput, nil, args)
